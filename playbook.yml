---
- name: Configure webserver with nginx and TLS
  hosts: all
  become: True
  gather_facts: True

  vars_files:
    - nginx.yml


  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

  tasks:
    - name: Ensure nginx is installed
      package:
        name: nginx
        update_cache: true
      notify: Restart Nginx

    - name: Create directories for TSL certificates
      file:
        path: "{{ tls_dir }}"
        state: directory
        mode: '0750'
      notify: Restart Nginx

    - name: Display the variable
      debug:
        msg: "The file used was {{ conf_file }}"

    - name: Concateante variable
      debug:
        msg: "The url is https://{{ server_name ~'.'~ tls_dir }}"

    - name: Copy TSL file 
      copy:
        src: "{{ item }}"
        dest: "{{ tls_dir }}"
        mode: '0600'
      loop:
        - "{{ key_file }}"
        - "{{ cert_file }}"
      notify: Restart Nginx

    - name: Manage nginx config template
      template:
        src: nginx.conf.j2
        dest: "{{ conf_file }}"
        mode: '0644'
      notify: Restart Nginx

    - name: Enable configuration 
      file:
        src: /etc/nginx/sites-available/default
        dest: /etc/nginx/sites-enabled/default
        state: link 

    - name: install Gomepage 
      template:
        src: index.html.j2
        dest: /usr/share/nginx/html/index.html
        mode: '0644'
    
    - name: Restart nginx
      meta: flush_handlers


    # - name: Accept port to web-server
    #   ansible.posix.firewalld:
    #     port: 80/tcp
    #     permanent: true 
    #     state: enabled
    #   loop:
    #     - "22"
    #     - "80" 
    #     - "443"

    - name: "Test it! https://localhost:8443/index.html"
      delegate_to: localhost
      become: false
      uri:
        url: 'https://192.168.161.244/index.html'
        validate_certs: false
        return_content: true
      register: this
      failed_when: "'Running on ' not in this.content"
      tags:
        - test
    
    
